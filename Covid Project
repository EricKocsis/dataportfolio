--First SELECT DATA being used --
SELECT Location, date, total_cases, new_cases, total_deaths, population
FROM `covid_data.covid_deaths`
WHERE continent IS NOT NULL
ORDER BY 1, 2; 

-- Total Cases vs Total Deaths 
-- Shows probability OF dying from covid in your country
SELECT location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 AS death_percentage
FROM `covid_data.covid_deaths`
WHERE continent IS NOT NULL
ORDER BY 1, 2;

-- Total Cases vs Population 
-- Percentage of population that contracted Covid
SELECT location, date, population, total_cases, (total_cases/population)*100 AS case_percentage
FROM `covid_data.covid_deaths`
WHERE continent IS NOT NULL
ORDER BY 1, 2;

-- Countries with highest infection rate compared to population

SELECT location, population, MAX(total_cases) as highest_infection_count, MAX(total_cases/population)*100 as case_percentage
FROM `covid_data.covid_deaths`
WHERE continent IS NOT NULL
GROUP BY location, population
ORDER BY case_percentage DESC;

-- Countries with highest death count per population

SELECT location, MAX(total_deaths) as total_death_count
FROM `covid_data.covid_deaths`
WHERE continent IS NOT NULL
GROUP BY location, population
ORDER BY total_death_count DESC;

-- Broken down by continent

SELECT continent, MAX(total_deaths) as total_death_count
FROM `covid_data.covid_deaths`
WHERE continent IS NOT NULL
GROUP BY continent
ORDER BY total_death_count DESC;

-- Broken down gloabally

SELECT date, SUM(new_cases) AS total_new_cases, SUM(new_deaths) AS total_new_deaths,
  CASE
    WHEN SUM(new_cases) = 0 THEN 0
    ELSE SUM(new_deaths) / SUM(new_cases) * 100
  END AS new_death_percentage
FROM `covid_data.covid_deaths`
WHERE continent IS NOT NULL
GROUP BY date
ORDER BY 1, 2;

-- Total Popluation vs Vaccinations

SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(vac.new_vaccinations) OVER (partition by dea.Location ORDER BY dea.location, dea.date) as rolling_people_vaccinated, --(rolling_people_vaccinated/population)*100
FROM `covid_data.covid_deaths` dea
JOIN `covid_data.covid_vaccinations` vac
  ON dea.location = vac.location
  and dea.date = vac.date
WHERE dea.continent IS NOT NULL
ORDER BY 2, 3;

-- Using CTE

CREATE TABLE covid_data.popvsvac AS (
  WITH popvsvac AS (
    SELECT
      dea.continent,
      dea.location,
      dea.date,
      dea.population,
      vac.new_vaccinations,
      SUM(SAFE_CAST(vac.new_vaccinations AS INT64)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS rolling_people_vaccinated
    FROM
      `covid_data.covid_deaths` AS dea
    JOIN
      `covid_data.covid_vaccinations` AS vac
    ON
      dea.location = vac.location
      AND dea.date = vac.date
    WHERE
      dea.continent IS NOT NULL
  )
  SELECT
    *,
    (rolling_people_vaccinated / population) * 100 AS percent_vaccinated
  FROM
    popvsvac
)

--Using Temp Table to perform Calculation on Partition By in previous query

CREATE OR REPLACE VIEW `covid_data.percent_population_vaccinated` AS
SELECT
  dea.continent,
  dea.location,
  dea.date,
  dea.population,
  vac.new_vaccinations,
  SUM(CAST(vac.new_vaccinations AS INT64)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS rolling_people_vaccinated
FROM
  `covid_data.covid_deaths` AS dea
JOIN
  `covid_data.covid_vaccinations` AS vac
ON
  dea.location = vac.location
  AND dea.date = vac.date
WHERE
  dea.continent IS NOT NULL;
